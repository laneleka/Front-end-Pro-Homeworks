{"version":3,"file":"utils.js","sources":["utils.js"],"sourcesContent":["const getLocalStorage = (key) => {\n  try {\n    return JSON.parse(localStorage.getItem(key));\n  } catch(error) {\n    console.error(error);\n  }\n}\n\nconst setLocalStorage = (key, value) => localStorage.setItem(key, JSON.stringify(value));\nconst removeLocalStorage = (key) => localStorage.removeItem(key);\n\nclass Element {\n  constructor(nameTag = 'div', options) {\n    this.element = document.createElement(nameTag);\n\n    if (options?.classes && Array.isArray(options.classes)) {\n      this.element.classList.add(...options.classes);\n    } else if (options?.classes && typeof options.classes === 'string') {\n      this.element.classList.add(options.classes);\n    }\n\n    if (options?.attributes) {\n      Object.keys(options.attributes).forEach(key => {\n        this.element.setAttribute(key, options.attributes[key]);\n      });\n    }\n  }\n\n  setHTML(html) {\n    this.element.innerHTML = html;\n    return this;\n  }\n}\n\nconst render = (selector, element) => {\n  const selectedElement = document.querySelector(selector);\n\n  if (!selectedElement) {\n    return;\n  }\n\n  if (Array.isArray(element)) {\n    selectedElement.append(...element);\n  } else {\n    selectedElement.append(element);\n  }\n}\n\nconst groupedByCategory = (products) => {\n  const categories = {};\n\n  products.forEach(product => {\n    if (categories[product.category]) {\n      categories[product.category].push(product);\n    } else {\n      categories[product.category] = [product];\n    }\n  });\n\n  return categories;\n};\n\nconst getSalePrice = (price, salePrice) => {\n  return Math.round(price - price * (salePrice / 100));\n}\n\nconst getCountPrice = (product) => {\n  return product.sale ? getSalePrice(product.price, product.salePercent) * product.count : product.price * product.count;\n}"],"names":["getLocalStorage","JSON","parse","localStorage","getItem","key","error","console","setLocalStorage","value","setItem","stringify","removeLocalStorage","removeItem","Element","constructor","nameTag","options","this","element","document","createElement","classes","Array","isArray","classList","add","attributes","Object","keys","forEach","setAttribute","setHTML","html","innerHTML","render","selector","selectedElement","querySelector","append","groupedByCategory","categories","products","product","category","push","getSalePrice","price","salePrice","Math","round","getCountPrice","sale","salePercent","count"],"mappings":"AAAA,MAAMA,gBAAkB,IACtB,IACE,OAAOC,KAAKC,MAAMC,aAAaC,QAAQC,CAAG,CAAC,CAG7C,CAFE,MAAMC,GACNC,QAAQD,MAAMA,CAAK,CACrB,CACF,EAEME,gBAAkB,CAACH,EAAKI,IAAUN,aAAaO,QAAQL,EAAKJ,KAAKU,UAAUF,CAAK,CAAC,EACjFG,mBAAqB,GAAST,aAAaU,WAAWR,CAAG,QAEzDS,QACJC,YAAYC,EAAU,MAAOC,GAC3BC,KAAKC,QAAUC,SAASC,cAAcL,CAAO,EAEzCC,GAASK,SAAWC,MAAMC,QAAQP,EAAQK,OAAO,EACnDJ,KAAKC,QAAQM,UAAUC,IAAI,GAAGT,EAAQK,OAAO,EACpCL,GAASK,SAAsC,UAA3B,OAAOL,EAAQK,SAC5CJ,KAAKC,QAAQM,UAAUC,IAAIT,EAAQK,OAAO,EAGxCL,GAASU,YACXC,OAAOC,KAAKZ,EAAQU,UAAU,EAAEG,QAAQzB,IACtCa,KAAKC,QAAQY,aAAa1B,EAAKY,EAAQU,WAAWtB,EAAI,CACxD,CAAC,CAEL,CAEA2B,QAAQC,GAEN,OADAf,KAAKC,QAAQe,UAAYD,EAClBf,IACT,CACF,CAEA,MAAMiB,OAAS,CAACC,EAAUjB,KAClBkB,EAAkBjB,SAASkB,cAAcF,CAAQ,EAElDC,IAIDd,MAAMC,QAAQL,CAAO,EACvBkB,EAAgBE,OAAO,GAAGpB,CAAO,EAEjCkB,EAAgBE,OAAOpB,CAAO,EAElC,EAEMqB,kBAAoB,IACxB,MAAMC,EAAa,GAUnB,OARAC,EAASZ,QAAQa,IACXF,EAAWE,EAAQC,UACrBH,EAAWE,EAAQC,UAAUC,KAAKF,CAAO,EAEzCF,EAAWE,EAAQC,UAAY,CAACD,EAEpC,CAAC,EAEMF,CACT,EAEMK,aAAe,CAACC,EAAOC,IACpBC,KAAKC,MAAMH,EAAQA,GAASC,EAAY,IAAI,EAG/CG,cAAgB,GACbR,EAAQS,KAAON,aAAaH,EAAQI,MAAOJ,EAAQU,WAAW,EAAIV,EAAQW,MAAQX,EAAQI,MAAQJ,EAAQW"}